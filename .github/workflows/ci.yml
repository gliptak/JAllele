name: ci

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        java: ['17', '21']
    name: Test Java ${{ matrix.java }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: zulu
          java-version: ${{ matrix.java }}
      - name: Build with Gradle
        run: ./gradlew build
      - name: Upload jallele-cmdline-test JAR
        id: UploadJAR
        if: matrix.java == '17'
        uses: actions/upload-artifact@v4
        with:
          name: jallele-cmdline-test-java-${{ matrix.java }}
          path: jallele-cmdline/build/libs/jallele-cmdline-test-*.jar
          if-no-files-found: error
      - name: Generate code coverage report
        run: ./gradlew jacocoRootReport
      - name: Upload coverage to Codecov
        if: matrix.java == '17'
        uses: codecov/codecov-action@v5
        with:
          files: ./build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml
          fail_ci_if_error: true
      - name: Publish snapshot to GitHub Package Registry
        if: matrix.java == '17' && github.event_name == 'pull_request'
        run: ./gradlew publish
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Post artifact download link
        if: matrix.java == '17' && github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v5
        with:
          issue-number: ${{ github.event.number }}
          body: |
            Download artifact: [jallele-cmdline-test JAR](${{ steps.UploadJAR.outputs.artifact-url }})
