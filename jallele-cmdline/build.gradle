dependencies {
    implementation project(':jallele-engine')
    implementation 'args4j:args4j:2.37'
    implementation 'junit:junit:4.13.2'
    implementation 'org.testng:testng:7.11.0'
}

def attr = [
        'Premain-Class' : 'com.github.gliptak.jallele.Agent',
        'Agent-Class' : 'com.github.gliptak.jallele.Agent',
        'Can-Redefine-Classes' : true,
        'Can-Retransform-Classes' : true,
        'Main-Class' : 'com.github.gliptak.jallele.Main'
        ]

test {
    jvmArgs '-Djdk.attach.allowAttachSelf=true'
}

task uberjar(type: Jar, dependsOn: ':jallele-engine:build') {
    manifest {
        attributes attr
    }
    archiveBaseName = project.name + '-all'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } with jar
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task uberjartest(type: Jar, dependsOn: ':jallele-engine:build') {
    manifest {
        attributes attr
    }
    archiveBaseName = project.name + '-test'
    from files(sourceSets.test.output)
    from {
        configurations.testRuntimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } with jar
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

artifacts {
    archives uberjar
    archives uberjartest
}

jar {
    manifest {
        attributes attr
    }
}
